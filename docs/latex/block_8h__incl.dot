digraph "block.h"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="block.h",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Block game entity header file."];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="DtoMap.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$DtoMap_8h.html",tooltip="Abstract class for classes that can have dto representation"];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="blockdto.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blockdto_8h.html",tooltip="Block game entity dto class"];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="Serializable.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$Serializable_8h.html",tooltip="Abstract class for classes that can be serialized as json object."];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="QJsonObject",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="gameentity.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gameentity_8h.html",tooltip="Entity with ability to peridiocally update and pause."];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="pausableentity.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pausableentity_8h.html",tooltip="Entity with ability to pause logic."];
  Node6 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="updateentity.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$updateentity_8h.html",tooltip="entity with ability to periodically update"];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="QObject",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="qelapsedtimer.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="qtimer.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="QElapsedTimer",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node6 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="signalsender.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$signalsender_8h.html",tooltip="Class for sending signals when game entities are somehow transformed."];
  Node13 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="QGraphicsRectItem",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
